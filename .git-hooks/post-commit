#!/bin/bash

# Get the current branch name
branch=$(git rev-parse --abbrev-ref HEAD)

# Only tag on the main branch
if [ "$branch" == "main" ]; then
  # Get the latest commit message
  commit_message=$(git log -1 --pretty=%B)

  # Extract the current version from the latest tag, or set it to 0.1.0 if no tags exist
  latest_version=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.1.0")

  echo "Latest version: $latest_version"
  echo "Commit message: $commit_message"

  # Increment the version based on the commit message
  if [[ $commit_message =~ "BREAKING CHANGE" ]]; then
    # Major version bump
    new_version=$(echo $latest_version | awk -F. '{print $1+1".0.0"}')
    echo "Major version bump to $new_version"
  elif [[ $commit_message =~ ^feat ]]; then
    # Minor version bump
    new_version=$(echo $latest_version | awk -F. '{print $1"."$2+1".0"}')
    echo "Minor version bump to $new_version"
  elif [[ $commit_message =~ ^(fix|chore|docs|style|refactor|perf|test) ]]; then
    # Patch version bump
    new_version=$(echo $latest_version | awk -F. '{print $1"."$2"."$3+1}')
    echo "Patch version bump to $new_version"
  else
    echo "No version bump required for this commit."
    exit 0
  fi

  # Tag the repository with the new version
  git tag $new_version
  git push origin $new_version
  echo "Repository tagged with version $new_version"
fi
